---
AWSTemplateFormatVersion: '2010-09-09'
Description: CodePipeline for TVPRecap
Parameters:
  SourceBucket:
    Description: 'S3 source bucket'
    Type: String
    Default: 'tvprecap-uat-sourcecode-usw2'
  SourceObjectKey:
    Description: 'S3 source artifact'
    Type: String
    Default: 'DevRecapFrontend.zip'
  GitHubToken: 
    NoEcho: true
    Type: String
    Description: Generate personal access token
    Default: '1e256955090886f3e0d4f0a6ea25c63dcd3f2082'
  CodePipelineArn:
    Description: 'Role for codePipeline'
    Type: String
    Default: 'arn:aws:iam::153279871056:role/TVPRecapCodepipelineRole'    
  CodeBuildArn:
    Description: 'Role for codeBuild in codePipeline'
    Type: String
    Default: 'arn:aws:iam::153279871056:role/TVPRecapCodeBuildRole'
  EventsRoleArn:
    Description: 'Role for cloudwatch Events Rule for CodePipeline'
    Type: String
    Default: 'arn:aws:iam::153279871056:role/TVPRecap-CodePipeline-CloudwatchRole'
  GitHubUrl:
    Description: 'GitHub Url for respective application'
    Type: String
    Default: 'https://github.inbcu.com/tvfinance/tvprecap-frontend.git'
  EnvType: # Mandetory Parameter
    Description: Environment type.
    Type: String
    Default: staging
    ConstraintDescription: Must specify `qa` , `dev` or `prod`.
  ProjectID:
    Type: String
    Default: ProjectID  
  ProjectOwner:
    Type: String
    Default: Daniel Herrero 
  CreatedBy:
    Type: String
    Default: Harika
  BusinessUnit:
    Type: String
    Default: TV Entertainment 
  Project:
    Type: String
    Default: TVP Recap .Net Re-platform  

Resources:

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !Ref CodePipelineArn
      Name: TVPRecap-Dev-Frontend-CodePipeline-usw2
      Stages:
      - Name: Source
        Actions:
        - InputArtifacts: []
          Name: Source
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: 1
            Provider: S3
          OutputArtifacts:
          - Name: SourceArtifacts
          Configuration:
            S3Bucket: !Ref SourceBucket
            S3ObjectKey: !Ref SourceObjectKey
            PollForSourceChanges: false
          RunOrder: 1   
      - Name: Build
        Actions:
        - Name: Build
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: 1
            Provider: CodeBuild
          OutputArtifacts:
          - Name: BuildArtifacts
          InputArtifacts:
          - Name: SourceArtifacts
          Configuration:
            ProjectName: !Ref CodeBuildProject
          RunOrder: 1 
      ArtifactStore:
        Type: S3
        Location: tvprecap-uat-sourcecode-usw2

  S3CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: no_artifacts
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
      Name: TVPRecap-dev-Ghe-Frontend-usw2 #change the name 
      ServiceRole: !Ref CodeBuildArn
      SourceVersion: staging
      Source:
        Type: GITHUB_ENTERPRISE
        Auth:
          Resource: !Ref GitHubToken
          Type: OAUTH
        Location: !Ref GitHubUrl
        BuildSpec: |
            version: 0.2
            phases:
                build:
                  commands:
                  - zip -r DevRecapFrontend.zip .   
                  - aws s3 cp DevRecapFrontend.zip s3://tvprecap-uat-sourcecode-usw2  
      Tags:
        - Key: Environment
          Value: !Ref EnvType
        - Key: ProjectID
          Value: !Ref ProjectID
        - Key: Owner
          Value: !Ref ProjectOwner
        - Key: CreatedBy
          Value: !Ref CreatedBy
        - Key: BusinessUnit
          Value: !Ref BusinessUnit
        - Key: Project
          Value: !Ref Project                  
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: no_artifacts
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:1.0
        Type: LINUX_CONTAINER
      Name: TVPRecap-dev-Frontend-usw2 
      ServiceRole: !Ref CodeBuildArn
      Source:
      Source:
        Type: GITHUB_ENTERPRISE
        Auth:
          Resource: !Ref GitHubToken
          Type: OAUTH
        Location: !Ref GitHubUrl
        BuildSpec: |
            version: 0.2
            env:
              variables:
                  S3_BUCKET: "tvprecap-dev-frontend-usw2"
            phases:
              install:
                  runtime-versions:
                        nodejs: 10
              pre_build:
                    commands:
                      - echo Installing source NPM dependencies...
                      - npm install
                      - npm install -g @angular/cli
              build:
                commands:
                  - echo Build started on `date`
                  - ng build --configuration=stagingDev --aot
              post_build: 
                commands:
                  - aws s3 cp dist s3://${S3_BUCKET} --recursive
                  - aws cloudfront create-invalidation --distribution-id ES5ZSOP0HP4LW --paths "/"
                  - echo Build completed on `date`
            artifacts:
              files:
                  - '**/*'
              base-directory: 'dist/*'
              discard-paths: yes                
      Tags:
        - Key: Environment
          Value: !Ref EnvType
        - Key: ProjectID
          Value: !Ref ProjectID
        - Key: Owner
          Value: !Ref ProjectOwner
        - Key: CreatedBy
          Value: !Ref CreatedBy
        - Key: BusinessUnit
          Value: !Ref BusinessUnit
        - Key: Project
          Value: !Ref Project 

  EventRule: 
    Type: AWS::Events::Rule
    Properties:
      Name: TVPRecap-dev-Frontend-rule-usw2
      Description: "EventRule"
      EventPattern: 
        source: 
          - "aws.s3"
        detail-type: 
          - "AWS API Call via CloudTrail"
        detail:
          eventSource:
            - "s3.amazonaws.com"
          eventName:  
            - "CopyObject"
            - "PutObject"
            - "CompleteMultipartUpload"
          requestParameters:
            bucketName:
              - !Ref SourceBucket
            key:
              - !Ref SourceObjectKey
      State: "ENABLED"

      Targets:
        -
          Id: "TargetCodePipeline"
          Arn: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}"
          RoleArn: !Ref EventsRoleArn